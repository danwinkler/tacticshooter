/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.lwjgl.lwjgl:lwjgl:2.9.1'
    implementation files('jars/commons-logging-1.1.1.jar')
    implementation files('jars/dom4j-2.0.0-ALPHA-2.jar')
    implementation files('jars/httpclient-4.3-alpha1.jar')
    implementation files('jars/httpcore-4.3-alpha1.jar')
    implementation files('jars/jaxen-1.1.4.jar')
    implementation files('jars/jogg-0.0.7.jar')
    implementation files('jars/jorbis-0.0.15.jar')
    implementation files('jars/kryo-2.24.0.jar')
    implementation files('jars/kryonet-2.21.jar')
    implementation files('jars/miglayout-4.0-swing.jar')
    implementation files('jars/minlog-1.3.0.jar')
    implementation files('jars/objenesis-2.1.jar')
    implementation files('jars/rsyntaxtextarea.jar')
    implementation files('jars/slick.jar')
    implementation files('jars/vecmath-free.jar')
    // Include Nashorn from maven
    implementation 'org.openjdk.nashorn:nashorn-core:15.3'
}

application {
    // Define the main class for the application.
    mainClass = 'com.danwink.tacticshooter.TacticClient'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
