<?xml version="1.0" encoding="UTF-8"?>
<level width="40" height="40"><map><row>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,</row><row>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,</row></map><buildings><building x="70" y="70" bt="POINT" team="1" id="523904157" radius="50.0" name="a"/><building x="730" y="70" bt="POINT" team="1" id="-1635516179" radius="50.0" name="b"/><building x="730" y="730" bt="POINT" team="1" id="1873975974" radius="50.0" name="c"/><building x="70" y="730" bt="POINT" team="1" id="-1167991331" radius="50.0" name="d"/><building x="150" y="650" bt="POINT" team="0" id="-8462674" radius="50.0" name=""/><building x="650" y="650" bt="POINT" team="0" id="-117474256" radius="50.0" name=""/><building x="650" y="150" bt="POINT" team="0" id="515323106" radius="50.0" name=""/><building x="150" y="150" bt="POINT" team="0" id="-897073329" radius="50.0" name=""/><building x="70" y="290" bt="CENTER" team="0" id="894668538" radius="50.0" name="spawn"/><building x="70" y="410" bt="POINT" team="1" id="-1870153241" radius="50.0" name="finish"/></buildings><slots><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="PLAYER" b="AGGRESSIVE"/><slot s="COMPUTER" b="PASSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/><slot s="CLOSED" b="AGGRESSIVE"/></slots><code></code><ums>//Store the buildings into variables for easy access
var a = api.getBuildingByName( "a" );
var b = api.getBuildingByName( "b" );
var c = api.getBuildingByName( "c" );
var d = api.getBuildingByName( "d" );
var finish = api.getBuildingByName( "finish" );
var spawn = api.getBuildingByName( "spawn" );

var lives = 20;
var score = 0;

//Called every tick, which is about 10 times a second
function tick( i ) {
	//At the beginning of the game (1 second in)
	//Give all players 30 money
	//Send a welcome message
	if( i == 10 ) {
		for( var j = 0; j &lt; 8; j++ ) {
			var player = api.getPlayerBySlot( j );
			if( player != -1 ) {
				api.setPlayerMoney( player, 50 );
			}
		}
		api.sendMessage( "Welcome to Tower Defense" );
	}
	//Every 5 seconds, create some units
	if( i % 50 == 0 ) {
		var numUnits = 1 + Math.floor( (i*i) / 150000 );
		for( var j = 0; j &lt; numUnits; j++ ) {
			var u = api.createUnit( api.getPlayerBySlot( 8 ), "SABOTEUR", api.getBuildingX( a ), api.getBuildingY( a ) );
			api.moveUnit( u, api.getBuildingX( b ), api.getBuildingY( b ) );
		}

		api.sendMessage( "LIVES: " + lives + "   SCORE: " + score );
	}
}
//Don't forget to register your tick function
addTickListener( tick );

//Listener to send units from b to c
addStopListener( b, function( bu, u ) {
	api.moveUnit( u, api.getBuildingX( c ), api.getBuildingY( c ) );
});

// c --&gt; d
addStopListener( c, function( bu, u ) {
	api.moveUnit( u, api.getBuildingX( d ), api.getBuildingY( d ) );
});

// d --&gt; finish
addStopListener( d, function( bu, u ) {
	api.moveUnit( u, api.getBuildingX( finish ), api.getBuildingY( finish ) );
});

//Kill units and subtract a life if they make it to the end.
//If no more lives, end the game.
addStopListener( finish, function( bu, u ) {
	api.killUnit( u );
	lives--;
	score -= 10;
	if( lives &lt;= 0 ) {
		api.endGame();
	}
});

//When a unit is killed, increment the score
addKillListener( function( info ) {
	if( info.owner == api.getPlayerBySlot( 8 ) ) {
		score += 10;
	}
});
</ums></level>